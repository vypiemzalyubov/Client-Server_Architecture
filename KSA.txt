1) Клиент-Серверная Архитектура

КСА - сетевая архитектура, в которой процессы обмена данными или файлами распределены между поставщиком (Сервер) и заказчиком (Клиент)

Клиент - ПО под управлением пользователя, которое отправляет запрос или команду Серверу (например браузер)

Сервер - ПО, которое может принимать запросы и отдавать ответы

Бывают двухуровневая КСА (Клиент-Сервер), трехуровневая КСА (Клиент-Сервер-БД)

2) что такое HTTP и HTTPS

HTTP (Hyper Text Transfer Protocol - протокол передачи гипертекста) - прикладной протокол 7 уровня модели OSI. Может использоваться как "транспорт" для других протоколов (SOAP, XML, JSON)
Актуальная версия HTTP 1.1

HTTPS (Hyper Text Transfer Protocol Secure - безопасный протокол передачи гипертекста) - расширение протокола HTTP, поддерживающее шифрование посредством криптографических протоколов SSL и TLS
Не является отдельным протоколом, а лишь расширением протокола HTTP с надстройкой шифрования
Передаваемые данные по HTTP не защищены, HTTPS обеспечивает шифрование данных
HTTP использует 80 порт, HTTPS - 443

3) HTTP методы

Метод - последовательность из любых символов, кроме управляющих и разделителей, определяющая операцию, которую нужно осуществить с заданным ресурсом

GET - запрашивает информацию из ресурса и не влияет на его содержимое. Доступен для кэширования данных и добавления в закладки. Ограничен длиной адресной строки (2048)

POST - отправка данных на ресурс (может оказывать влияние на содержимое ресурса). Не может быть кэширован, не остаётся в истории браузера, нельзя добавить в закладки. Не ограничен в объёме. Отправляемые данные содержатся в теле запроса

HEAD - аналогичен GET, но в ответе Сервера содержится только заголовок, без тела. Применяется для проверки, существует ли ресурс по данному адресу и не изменился ли он с момента последнего обращения

PUT - загружает содержимое запроса на указанный URI. Если по заданному URI ресурса нет, то Сервер создаёт его, возвращая статус 201 (Created)

DELETE - удаляет указанный ресурс

OPTIONS - описание параметров коммуникации между Клиентом и Сервером

CONNECT - устанавливает тоннель к Серверу, определенному по ресурсу

TRACE - выполняет вызов возвращаемого тестового сообщения с ресурса

PATCH - частичное изменение ресурса

4) HTTP статус коды Сервера

Статус код - информирует Клиента о результате запроса

1xx - информационные
2xx - успех
200 ОК - успешный запрос
201 Created - создан новый ресурс
3xx - перенаправление
300 Multiple Choices - выбор из нескольких вариантов перенаправления
4xx - ошибка Клиента
400 Bad Request - некорректный запрос
401 Unauthorized - не авторизован
402 Payment Required - не используется
403 Forbidden - запрещено (ограничение прав доступа к ресурсу)
404 Not found - ресурс по заданному адресу не найдет
405 Method Not Allowed - метод не поддерживается данным ресурсом
408 Request Timeout - время ожидания истекло
5xx - ошибки Сервера
500 Internal Server Error - внутренняя ошибка Сервера
501 Not Implemented - метод не поддерживается
502 Bad Gateway - ошибка шлюза
503 Service Unavailable - сервис недоступен
504 Gateway Timeout - время ожидания ответа шлюзом истекло
505 HTTP Version Not Supported - версия HTTP не поддерживается
511 Network Authentication Required - требуется аутентификация

5) что такое ядро браузера

Ядро - программа или модуль, который отображает контент на основе языка разметки. Отвечает за получение содержимого веб-страницы (HTML, XML, изображения), организацию информацию (добавление CSS) и расчёт режима отображения страницы, а затем её вывод пользователю

Ядро браузера:
-движок рендеринга
-движок JS

Разные ядра браузеров по разному интерпретируют синтаксис записи веб-страниц, поэтому эффект рендеринга (отображения) одной и той же веб-страницы в браузерах разных ядер также может быть различным. Именно поэтому необходимо тестировать веб-страницы в браузерах разных ядер

6) Какие браузеры какие ядра используют

Google (Chrome) - Blink
Mozilla (Firefox) - Gecko
Apple (Safari) - WebKit
Microsoft - EdgeHTML (уже на Chromium)

Chromium: Brave, Colibri, Comodo Dragon, Microsoft Edge, Epic Browser, Opera, SRWare Iron, Vivaldi

7) Что такое API

API (Application Programming Interface - программный интерфейс приложения) - специальный протокол для взаимодействия компьютерных программ, который позволяет использовать функции одного приложения внутри другого

8) Что такое эндпоинты

Эндпоинт (Endpoint - конечная точка) - некий шлюз, который соединяет серверные процессы приложения с внешним интерфейсом (т.е адрес, на
который отправляются сообщения)

9) URL (URI, URL, URN)

URI (Uniform Resource Identifier - унифицированный идентификатор ресурса) - имя и адрес ресурса в
сети, включает в себя URL и URN

URL (Uniform Resource Locator - унифицированный определитель местонахождения ресурса) - адрес
ресурса в сети, определяет местонахождение и способ обращения к нему

URN (Uniform Resource Name - унифицированное имя ресурса) - имя ресурса в сети, определяет
только название ресурса, но не говорит как к нему подключиться

Примеры:

URI - https://wiki.merionet.ru/images/vse-chto-vam-nuzhno-znat-pro-devops/1.png

URL - https://wiki.merionet.ru

URN - images/vse-chto-vam-nuzhno-znat-pro-devops/1.png

URI может содержать URL, но URL указывает только адрес ресурса

10) Идемпотентные HTTP методы

Метод HTTP является идемпотентным, если повторный идентичный запрос, сделанный один или несколько раз подряд, имеет один и тот же эффект, не изменяющий состояние сервера (т.е идемпотентный метод не должен иметь никаких побочных эффектов (side-effects), кроме сбора статистики или подобных операций)

Идемпотентные методы: GET, HEAD, PUT, DELETE

11) Безопасные HTTP методы

Метод HTTP является безопасным, если он не меняет состояние сервера (т.е безопасный метод проводит операции "только чтение" (read-only))

Безопасные методы: GET, HEAD, OPTIONS

12) Идентификация, аутентификация, авторизация

Идентификация - процедура, в результате выполнения которой для субъекта идентификации выявляется его идентификатор, однозначно определяющий этого субъекта в информационной системе

Аутентификация - процедура проверки подлинности, например проверка подлинности пользователя путем
сравнения введенного им пароля с паролем, сохраненным в базе данных

Авторизация - предоставление определенному лицу или группе лиц прав на выполнение определенных
действий

13) что такое IP

IP-адрес - уникальный адрес, идентифицирующий устройство в интернете или локальной сети.

IP означает «интернет-протокол», т.е набор правил, регулирующих формат данных, отправляемых через интернет или локальную сеть

IP-адреса представляют собой набор из четырех чисел (например 192.158.1.38). Каждое число в этом наборе принадлежит интервалу от 0 до 255. Таким образом, полный диапазон IP-адресации – это адреса от 0.0.0.0 до 255.255.255.255

IP-адреса бывают статические (белые, не изменяющиеся) и динамические (серые, изменяющиеся при каждом заходе в сеть)

14) что такое октеты в DNS

DNS (Domain Name System) - система, которая позволяет браузеру найти запрошенный пользователем сайт по имени домена
По сути, DNS хранит IP-адреса сайтов, которые привязаны к именам сайтов

Октет - восемь двоичных разрядов (у нас обычно называется байтом). Октет может принимать 256 возможных состояний (кодов, значений, комбинаций битов (нулей и единиц))
Слово "октет" часто употребляется при описании сетевых протоколов, так как они предназначены для взаимодействия компьютеров, имеющих не обязательно одинаковую платформу. В отличие от байта, который (в широком смысле) может быть равен 10, 12 и т. п. битам, октет всегда равен 8 битам

15) Что такое порт, сколько портов у Linix сервера

Порт - целое неотрицательное число, записываемое в заголовках протоколов транспортного уровня сетевой модели OSI (TCP, UDP, SCTP, DCCP)

Номер порта - это просто номер программы, которая будет обрабатывать переданные данные. Каждой сетевой программе, которая работает по протоколу TCP/IP, сопоставлен свой номер порта (например, 80 - это порт WWW-сервера (обычно это Apache), a 53 — это порт системы доменных имен.
Для операционной системы Linux существуют 3 разных типа сетевых портов:
1) Порты 0-1023 - зарезервированы для операционной системы и основных сервисов
2) Зарегистрированные порты 1024-49151 - могут использоваться приложениями, конкретными службами и пользователями
3) Динамические или частные порты 49152-65535

Хорошо известные порты перечислены в файле /etc/services в ОС

16) Уровни OSI

OSI (Open Systems Interconnection model) - открытая сетевая модель

Уровни модели OSI:

7) Прикладной уровень (Application) (HTTP, HTTPS, SFTP, DNS, DHCP)

6) Уровень представления (Presentation) (шифрование данных, кодировка из ASCII в UTF-8, аудио/видео, картинки)

5) Сеансовый уровень (Session) (синхронизация аудио/видео потока при видеозвонке)

4) Транспортный уровень (Transport) (TCP, UDP)

3) Сетевой уровень (Network) (маршрутизаторы (роутеры)/ARP, IP)

2) Канальный уровень (Data link) (коммутаторы/два подуровня: MAC, LLC)

1) Физический (Physical) (оптоволокно, WiFi, 4G)

17) Хедеры HTTP запросов

Заголовки HTTP являются основной частью этих HTTP-запросов и ответов, и они несут информацию о браузере клиента, запрошенной странице, сервере и многом другом. Когда мы вводим URL-адрес в адресной строке, наш браузер отправляет HTTP-запрос. Первая строка - это "Request Line", которая содержит некоторую базовую информацию по запросу. Остальные - HTTP заголовки. После этого запроса наш браузер получает ответ HTTP. Первая строка - это «Строка состояния», за которой следуют «HTTP-заголовки», до пустой строки. После этого начинается «содержимое».

Заголовки разделяются на четыре основных группы:

1) General Headers (общие заголовки) - используются в запросах и ответах. Должны включаться в любое сообщение клиента и сервера

2) Request Headers (заголовки запроса) - используются только в запросах

3) Response Headers (заголовки ответа) - используются только в ответах

4) Entity Headers (заголовки сущности) - сопровождают каждую сущность сообщения. Используются в запросах и ответах
